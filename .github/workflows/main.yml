name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        config: [ { a: "a", b: "eins" }, { a: "a", b: "zwei" } ]
      
    steps:
    - uses: actions/checkout@v1
    
    - name: Alternative eins
      if: matrix.config.b == 'eins'
      run: echo ::set-env name=ENV_B::$(echo "EINS")
 
    - name: Alternative zwei
      if: matrix.config.b == 'zwei'
      run: echo ::set-env name=ENV_B::$(echo "ZWEI")
    
    - name: Alternative use
      run: echo $ENV_B

    - name: Cache PlatformIO
      id: platformio-cache-pip-id
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO Binary
      id: platformio-bin-cache-id
      uses: actions/cache@v1
      with:
        path: ~/.local
        key: ${{ runner.os }}-platformio-bin

    - name: Cache PlatformIO Packages
      id: platformio-packages-cache-id
      uses: actions/cache@v1
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio-packages-${{ hashFiles('**/platformio.ini') }}

    - name: Install PlatformIO
      if: steps.platformio-cache-pip-id.outputs.cache-hit != 'true' ||
        steps.platformio-bin-cache-id.outputs.cache-hit != 'true' ||
        steps.platformio-packages-cache-id.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements.txt
        $HOME/.local/bin/platformio --version
        
    - name: Install dfu-util
      run: |
        sudo apt-get --assume-yes install dfu-util
        dfu-util --version

    - name: Build Stepper
      run: |
        $HOME/.local/bin/platformio run -d stepper -v
        
    - name: Build MAX6675
      run: |
        $HOME/.local/bin/platformio run -d max6675 -v
